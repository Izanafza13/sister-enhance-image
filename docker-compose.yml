# version: '3.10'

# services:
#   api-server:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "5000:5000"
#     depends_on:
#       - redis
#       - celery
#     volumes:
#       - tmp-volume:/tmp  # Gunakan volume yang sama untuk berbagi direktori /tmp

#   celery:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: celery -A tasks worker --loglevel=info
#     depends_on:
#       - redis
#     volumes:
#       - tmp-volume:/tmp  # Gunakan volume yang sama untuk berbagi direktori /tmp

#   redis:
#     image: "redis:latest"
#     ports:
#       - "6379:6379"

# volumes:
#   tmp-volume:  # Definisikan volume tmp-volume yang digunakan oleh kedua container



services:
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - redis
    volumes:
      - tmp-volume:/tmp

  # Celery workers
  celery-sharpen:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A tasks.celery_app worker --loglevel=info -Q sharpen_queue
    depends_on:
      - redis
    volumes:
      - tmp-volume:/tmp

  celery-denoise:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A tasks.celery_app worker --loglevel=info -Q denoise_queue
    depends_on:
      - redis
    volumes:
      - tmp-volume:/tmp

  celery-contrast:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A tasks.celery_app worker --loglevel=info -Q contrast_queue
    depends_on:
      - redis
    volumes:
      - tmp-volume:/tmp

  celery-combine:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A tasks.celery_app worker --loglevel=info -Q combine_queue
    depends_on:
      - redis
    volumes:
      - tmp-volume:/tmp

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"

volumes:
  tmp-volume:
